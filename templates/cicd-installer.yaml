apiVersion: v1
kind: ServiceAccount
metadata:
  name: cicd_installer
  labels:
    app: installer

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
groupNames: null
metadata:
  name: cicd_installer_admin
  labels:
    app: installer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: ServiceAccount
    name: cicd_installer


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: installer-init-script
  labels:
    app: installer
data:
  init.sh: |-
      GOGS_USER=admin
      GOGS_PWD=admin

      kubectl rollout status deployment/gogs

      _RETURN=$(curl -o /tmp/curl.log -sL --post302 -w "%{http_code}" http://gogs:3000/user/sign_up \
      --form user_name=$GOGS_USER \
      --form password=$GOGS_PWD \
      --form retype=$GOGS_PWD \
      --form email=admin@gogs.com)

      sleep 5

      if [ $_RETURN != "200" ] && [ $_RETURN != "302" ] ; then
      echo "ERROR: Failed to create Gogs admin"
      cat /tmp/curl.log
      exit 255
      fi

      sleep 10

      cat <<EOF > /tmp/data.json
      {
      "clone_addr": "$$import_repo",
      "uid": 1,
      "repo_name": "$$gogs_repo_name"
      }
      EOF

      _RETURN=$(curl -o /tmp/curl.log -sL -w "%{http_code}" -H "Content-Type: application/json" \
      -u $GOGS_USER:$GOGS_PWD -X POST http://gogs:3000/api/v1/repos/migrate -d @/tmp/data.json)

      if [ $_RETURN != "201" ] ;then
      echo "ERROR: Failed to import repo $$import_repo"
      cat /tmp/curl.log
      exit 255
      fi



      function disable_outreach() {
        local _NEXUS_USER=$1
        local _NEXUS_PWD=$2
        local _NEXUS_URL=$3

        read -r -d '' _DISABLE_JSON << EOM
      {
        "name": "disable_outreach",
        "type": "groovy",
        "content": "capabilityRegistry = container.lookup(org.sonatype.nexus.capability.CapabilityRegistry.class)\ncapabilityRegistry.all.findAll {it.context().type().toString().startsWith(\"Outreach\")}.each {\ncapabilityRegistry.disable(it.context().id())\n}"
      }
      EOM

        curl -v -H "Accept: application/json" -H "Content-Type: application/json" -d "$_DISABLE_JSON" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/rest/v1/script/"
        curl -v -X POST -H "Content-Type: text/plain" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/rest/v1/script/disable_outreach/run"
      }

      function change_admin_password() {
        local _NEXUS_USER=$1
        local _NEXUS_PWD=$2
        local _NEXUS_URL=$3

        read -r -d '' _CHG_PWD_JSON << EOM
      {
        "name": "reset_password",
        "type": "groovy",
        "content": "security.securitySystem.changePassword('admin','admin')"
      }
      EOM


        curl -v -H "Accept: application/json" -H "Content-Type: application/json" -d "$_CHG_PWD_JSON" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/rest/v1/script/"
        curl -v -X POST -H "Content-Type: text/plain" -u "$_NEXUS_USER:$_NEXUS_PWD" "${_NEXUS_URL}/service/rest/v1/script/reset_password/run"
      }

      disable_outreach admin admin123 'http://nexus:8081'
      change_admin_password admin admin123 'http://nexus:8081'

      echo 'Installation has completed successfully.'


---

apiVersion: batch/v1
kind: Job
metadata:
  name: cicd-installer
  labels:
    app: installer
spec:
  activeDeadlineSeconds: 600
  completions: 1
  parallelism: 1
  template:
    spec:
      serviceAccountName: cicd_installer
      restartPolicy: Never
      containers:
        - name: cicd-installer-job
          image: openshift/origin:v3.11
          volumeMounts:            
            - name: init-script
              mountPath: /var/init-script
          command:
            - /bin/bash
            - -x
            - /var/init-script/init.sh
      volumes:
        - name: init-script
          configMap:
            name: installer-init-script
